{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","cn","completed","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUsers","App","useState","setTodos","setTitle","setUserId","titleCorrect","setTitleCorrect","userIdCorrect","setUserIdCorrect","action","method","onSubmit","event","preventDefault","Math","max","newTodo","prev","TextField","type","variant","size","value","onChange","target","label","sx","m","minWidth","error","helperText","placeholder","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","Button","style","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.627389ab.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todo: Todos\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const { title, user } = todo;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todos: Todos[]\n};\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Button,\n  TextField,\n  Select,\n  InputLabel,\n  MenuItem,\n  SelectChangeEvent,\n  FormControl, FormHelperText,\n} from '@mui/material';\nimport './App.scss';\n\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todos } from './types/Todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todosWithUsers: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [titleCorrect, setTitleCorrect] = useState(true);\n  const [userIdCorrect, setUserIdCorrect] = useState(true);\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleCorrect(true);\n  };\n\n  const changeUserId = (event: SelectChangeEvent) => {\n    setUserId(event.target.value);\n    setUserIdCorrect(true);\n  };\n\n  const handleSubmit = (event: React.MouseEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title) {\n      setTitleCorrect(true);\n    } else {\n      setTitleCorrect(false);\n    }\n\n    if (userId) {\n      setUserIdCorrect(true);\n    } else {\n      setUserIdCorrect(false);\n    }\n\n    if (userId && title) {\n      const id = Math.max(...todos.map(todo => todo.id));\n\n      const newTodo: Todos = {\n        title,\n        userId: +userId,\n        completed: false,\n        id: id + 1,\n        user: getUserById(+userId),\n      };\n\n      setTodos(prev => [...prev, newTodo]);\n      setTitle('');\n      setUserId('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        className=\"App__form\"\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <TextField\n            type=\"text\"\n            id=\"outlined-basic\"\n            data-cy=\"titleInput\"\n            variant=\"outlined\"\n            size=\"medium\"\n            value={title}\n            onChange={changeTitle}\n            label=\"Title\"\n            sx={{ m: 1, minWidth: 198 }}\n            error={!titleCorrect}\n            helperText={cn({ 'Please enter a title': !titleCorrect })}\n            placeholder=\"Enter a title\"\n          />\n        </div>\n\n        <div className=\"field\">\n          <FormControl\n            size=\"medium\"\n            sx={{ m: 1, minWidth: 198 }}\n            error={!userIdCorrect}\n          >\n            <InputLabel id=\"select-label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={changeUserId}\n              labelId=\"select-label\"\n              label=\"User\"\n            >\n              {usersFromServer.map(user => (\n                <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\n              ))}\n            </Select>\n            {!userIdCorrect && (\n              <FormHelperText>Please choose a user</FormHelperText>\n            )}\n          </FormControl>\n        </div>\n\n        <Button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          variant=\"outlined\"\n          size=\"large\"\n          style={{ margin: 8 }}\n        >\n          Add\n        </Button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}